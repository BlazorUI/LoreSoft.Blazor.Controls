@page "/"

<h1>Hello, world!</h1>

Welcome to your new app.


<Typeahead SearchMethod="@SearchPeople"
           Items="People"
           @bind-Value="@SelectedPerson"
           Placeholder="Search by first name...">
    <SelectedTemplate Context="person">
        @person.FullName
    </SelectedTemplate>
    <ResultTemplate Context="person">
        @person.Firstname @person.Lastname
    </ResultTemplate>
</Typeahead>


<hr />

@if (SelectedPerson != null)
{
    <p>Selected: @SelectedPerson.Firstname @SelectedPerson.Lastname</p>
}

<hr />

<Typeahead SearchMethod="@SearchPeople"
           @bind-Values="@SelectedPeople"
           Placeholder="Search by first name...">
    <SelectedTemplate Context="person">
        @person.FullName
    </SelectedTemplate>
    <ResultTemplate Context="person">
        @person.Firstname @person.Lastname
    </ResultTemplate>
</Typeahead>

<hr />

@if (SelectedPeople != null)
{
    <ul>
        @foreach (var person in SelectedPeople)
        {
            <li>@person.Firstname @person.Lastname</li>
        }
    </ul>
}

<hr />

<EditForm Model="@starship" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <p>
        <label for="identifier">Identifier: </label>
        <InputText id="identifier" @bind-Value="starship.Identifier" />
    </p>
    <p>
        <label for="description">Description (optional): </label>
        <InputTextArea id="description" @bind-Value="starship.Description" />
    </p>
    <p>
        <label for="classification">Primary Classification: </label>
        <InputSelect id="classification" @bind-Value="starship.Classification">
            <option value="">Select classification ...</option>
            <option value="Exploration">Exploration</option>
            <option value="Diplomacy">Diplomacy</option>
            <option value="Defense">Defense</option>
        </InputSelect>
    </p>
    <p>
        <label for="accommodation">Maximum Accommodation: </label>
        <InputNumber id="accommodation"
                     @bind-Value="starship.MaximumAccommodation" />
    </p>
    <p>
        <label for="valid">Engineering Approval: </label>
        <InputCheckbox id="valid" @bind-Value="starship.IsValidatedDesign" />
    </p>
    <p>
        <label for="productionDate">Production Date: </label>
        <InputDate id="productionDate" @bind-Value="starship.ProductionDate" />
    </p>
    <p>
        <label for="productionDate">Captain: </label>
        <Typeahead SearchMethod="@SearchPeople"
                   @bind-Value="starship.Captain"
                   Placeholder="Captain">
            <SelectedTemplate Context="person">
                @person.FullName
            </SelectedTemplate>
            <ResultTemplate Context="person">
                @person.Firstname @person.Lastname
            </ResultTemplate>
        </Typeahead>    </p>

    <button type="submit">Submit</button>
</EditForm>

@code {

    protected List<Person> People = new List<Person>();

    protected Person SelectedPerson;

    protected IList<Person> SelectedPeople;

    protected Starship starship = new Starship();

    private void HandleValidSubmit()
    {
        Console.WriteLine("OnValidSubmit");
    }

    protected override void OnInitialized()
    {
        var person1 = new Person { Firstname = "John", Lastname = "Smith" };
        var person2 = new Person { Firstname = "Jane", Lastname = "Doe" };
        var person3 = new Person { Firstname = "Tom", Lastname = "Jones" };
        var person4 = new Person { Firstname = "Fred", Lastname = "Gouch" };
        var person5 = new Person { Firstname = "John", Lastname = "Philips" };
        var person6 = new Person { Firstname = "Jon", Lastname = "Thomas" };

        People.Add(person1);
        People.Add(person2);
        People.Add(person3);
        People.Add(person4);
        People.Add(person5);
        People.Add(person6);
    }

    public async Task<IList<Person>> SearchPeople(string searchText)
    {
        await Task.Delay(800); // simulate delay
        return await Task.FromResult(People.Where(x => x.Firstname.ToLower().Contains(searchText.ToLower())).ToList());
    }

    private void HandleFormSubmit()
    {
        Console.WriteLine("Form Submitted Successfully!");
    }
}
